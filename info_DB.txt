#Add user to community:
# INSERT INTO community_users (community.id, users.id) VALUES (1, 2);
#Add post to community:
# INSERT INTO community_posts (community.id, posts.id) VALUES (1, 2);
#Add comment to post:
# INSERT INTO comments (posts.id, users.id, reply.id, img, text) VALUES (1, 2, 3, 'img', 'text');

#Find amount of likes, members, follows:
# COUNT(users.id) FROM likeComment
# COUNT(users.id) FROM likePost
# COUNT(communityUsers) where community = ...
# COUNT(follow) where follower/followed = ...

#Admin check:
#  SELECT * FROM users WHERE admin = TRUE; -> Fetches rows where admin = 1

#Get all users in a community:
# SELECT users.* FROM users
# JOIN CommunityUsers ON users.id = CommunityUsers.user
#       WHERE CommunityUsers.community = ..; <- use to get one specific

#Get all posts in a community:
# SELECT posts.* FROM posts
# JOIN CommunityPosts ON posts.id = CommunityPosts.post
#       WHERE CommunityPosts.community = ...; <- use to get one specific

#Get all comments on a post:
# SELECT comments.* FROM comments
# JOIN posts ON comments.post = posts.id
#       WHERE posts.id = ...; <- use to get one specific


# PROBLEMS::
# No transactions, ex:
#   if a usewr deletes a post while someone else is making a comment,
#   then things might go wrong.



#FDs:
# user.ID -> (username, gender, email, password, created, admin)
# user.email -> (username, gender, id, password, created, admin)
# community.ID -> (about, members) creator?
# post.ID -> (user, img, text, likes)
# comment.ID -> (post, user, reply, img, text, likes)
# (posts.ID,user.ID) -> (postLike)                      :: user can only like a comment once
# (comments.ID, user.ID) -> (commentLike)               :: user can only like a comment once
# (follows=u.ID),followed=u.ID) -> (following TABLE)    :: each row = one specific follow relationship
# (community.ID,user.ID) -> (communityUser TABLE)
# (community.ID,post.ID) -> (communityPost TABLE)

# ER/DB si in 3NF, to be BOYCE-CODD: one user should not create several communities
# FIX = add table CommunityCreator.
# HOWEVER!!!! We want to delete creators and keep communities as a functionallity, 
# and therefore 3NF is sufficeient and easier. 
# It is in 3NF, and should stay that way. 